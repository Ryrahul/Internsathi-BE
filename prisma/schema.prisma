// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  name           String
  phone          String?
  gender         Gender?
  bio            String?
  skills         String[]
  city           String?
  dob            String?
  designation    String?
  address        String?
  fb_link        String?
  portfolio_link String?
  training       Json?
  access_token   String?
  refresh_token  String?
  experience     Experience[]
  job_preference String[]
  documents      Documents[]
  education      Education[]
  application    Application[]
  password       String
}

model Experience {
  id              Int      @id @default(autoincrement())
  employee        Employee @relation(fields: [employeeId], references: [id])
  employeeId      Int
  designation     String
  company_name    String
  start_date      DateTime
  end_date        DateTime
  job_description String
}

model Documents {
  id       Int      @id @default(autoincrement())
  employee Employee @relation(fields: [employeeId], references: [id])

  employeeId Int
  type       String
  file_key   String
  file_url   String
}

model Education {
  id            Int      @id @default(autoincrement())
  employee      Employee @relation(fields: [employeeId], references: [id])
  employeeId    Int
  type          String
  name          String
  degree_name   String
  start_date    String
  studying_here Boolean
  country       String
  city          String
  end_date      String
}

model Company {
  id         Int          @id @default(autoincrement())
  about      String
  category   String
  company    String
  founded    DateTime
  location   String
  address    String
  website    String
  fb_link    String
  insta_link String
  image_url  String[]
  image_keys String[]
  Internship Internship[]
}

model Internship {
  id               Int           @id @default(autoincrement())
  position         String
  company          Company       @relation(fields: [companyId], references: [id])
  companyId        Int
  salary           String
  jobType          JobType
  openings         Int
  level            String
  description      String
  location         String
  responsibilities String[]
  requirements     String[]
  requiredSkills   String[]
  tags             String[]
  applicationEnds  DateTime
  Application      Application[]
}

model Application {
  id           Int        @id @default(autoincrement())
  employee     Employee   @relation(fields: [employeeId], references: [id])
  employeeId   Int
  internship   Internship @relation(fields: [internshipId], references: [id])
  internshipId Int
  appliedAt    DateTime   @default(now())
}

enum JobType {
  FULL_TIME
  PART_TIME
  INTERNSHIP
}

enum Gender {
  Male
  Female
}
